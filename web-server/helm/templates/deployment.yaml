apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullName" . }}
  labels: {{- include "chart.labels" . | nindent 4 }}
    app: {{ include "app.fullName" . }}
    chart: {{ template "app.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: '{{ include "app.fullName" . }}'
      release: {{ .Release.Name | quote }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: {{ .Values.strategyType }}
  template:
    metadata:
      labels: {{- include "chart.labels" . | nindent 8 }}
        app: {{ include "app.fullName" . }}
        chart: {{ template "app.chart" . }}
        release: {{ .Release.Name | quote }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
        - name: {{ include "app.fullName" . }}
          image: {{ include "app.image" . }}:{{ .Values.images.app.imageTag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.images.app.imagePullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.app.server.port }}
              name: {{ .Values.app.server.targetPortName }}
          livenessProbe:
            failureThreshold: {{ int .Values.app.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.app.livenessProbe.path }}
              port: {{ .Values.app.server.port }}
              scheme: {{ .Values.app.livenessProbe.scheme }} 
            initialDelaySeconds: {{ .Values.app.livenessProbe.initialDelaySeconds }} 
            periodSeconds: {{ .Values.app.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.app.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.app.livenessProbe.timeoutSeconds }}
          readinessProbe:
            failureThreshold: {{ int .Values.app.readinessProbe.path }}
            httpGet:
              path: {{ .Values.app.readinessProbe.path }}
              port: {{ .Values.app.server.port }}
              scheme: {{ .Values.app.readinessProbe.scheme }}
            initialDelaySeconds: {{ .Values.app.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.app.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.app.readinessProbe.timeoutSeconds }}
          resources:
            requests:
              memory: '{{ .Values.app.resources.requests.memory }}'
              cpu:  '{{ .Values.app.resources.requests.cpu }}'
            limits:
              memory: '{{ .Values.app.resources.limits.memory }}'
              cpu:  '{{ .Values.app.resources.limits.cpu }}'
          envFrom:
            - configMapRef:
                name: {{ include "app.fullName" . }}-config
            - secretRef:
                name: {{ include "app.fullName" . }}-secret
      schedulerName: default-scheduler
      securityContext: {}
